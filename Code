//Banking App
//Author - Ratnadeep Mukherjee
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map;

class Account {
    private String accountNumber;
    private String accountHolder;
    private double balance;

    public Account(String accountNumber, String accountHolder, double balance) {
        this.accountNumber = accountNumber;
        this.accountHolder = accountHolder;
        this.balance = balance;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public String getAccountHolder() {
        return accountHolder;
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Successfully deposited: $" + amount);
        } else {
            System.out.println("Invalid amount. Please enter a positive value.");
        }
    }

    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("Successfully withdrew: $" + amount);
        } else {
            System.out.println("Invalid transaction. Please check your balance or enter a valid amount.");
        }
    }

    public void transfer(Account toAccount, double amount) {
        if (amount > 0 && amount <= balance) {
            this.balance -= amount;
            toAccount.deposit(amount);
            System.out.println("Transferred $" + amount + " to " + toAccount.getAccountHolder());
        } else {
            System.out.println("Invalid transaction. Insufficient funds or invalid amount.");
        }
    }
}

public class BankingApp {
    private static Map<String, Account> accounts = new HashMap<>();
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        boolean running = true;
        while (running) {
            System.out.println("\nWelcome to Simple Banking Application");
            System.out.println("1. Create Account");
            System.out.println("2. Deposit Money");
            System.out.println("3. Withdraw Money");
            System.out.println("4. Check Balance");
            System.out.println("5. Transfer Funds");
            System.out.println("6. Exit");
            System.out.print("Choose an option: ");
            int option = scanner.nextInt();
            scanner.nextLine();  // consume newline

            switch (option) {
                case 1:
                    createAccount();
                    break;
                case 2:
                    depositMoney();
                    break;
                case 3:
                    withdrawMoney();
                    break;
                case 4:
                    checkBalance();
                    break;
                case 5:
                    transferFunds();
                    break;
                case 6:
                    running = false;
                    System.out.println("Thank you for using Simple Banking Application!");
                    break;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }

    private static void createAccount() {
        System.out.print("Enter Account Number: ");
        String accountNumber = scanner.nextLine();
        System.out.print("Enter Account Holder Name: ");
        String accountHolder = scanner.nextLine();
        System.out.print("Enter Initial Deposit: ");
        double initialDeposit = scanner.nextDouble();
        scanner.nextLine();  // consume newline

        Account newAccount = new Account(accountNumber, accountHolder, initialDeposit);
        accounts.put(accountNumber, newAccount);
        System.out.println("Account successfully created for " + accountHolder);
    }

    private static void depositMoney() {
        Account account = findAccount();
        if (account != null) {
            System.out.print("Enter deposit amount: ");
            double amount = scanner.nextDouble();
            scanner.nextLine();  // consume newline
            account.deposit(amount);
        }
    }

    private static void withdrawMoney() {
        Account account = findAccount();
        if (account != null) {
            System.out.print("Enter withdrawal amount: ");
            double amount = scanner.nextDouble();
            scanner.nextLine();  // consume newline
            account.withdraw(amount);
        }
    }

    private static void checkBalance() {
        Account account = findAccount();
        if (account != null) {
            System.out.println("Account Balance for " + account.getAccountHolder() + ": $" + account.getBalance());
        }
    }

    private static void transferFunds() {
        System.out.print("Enter your Account Number: ");
        String fromAccountNumber = scanner.nextLine();
        Account fromAccount = accounts.get(fromAccountNumber);

        if (fromAccount == null) {
            System.out.println("Account not found.");
            return;
        }

        System.out.print("Enter recipient's Account Number: ");
        String toAccountNumber = scanner.nextLine();
        Account toAccount = accounts.get(toAccountNumber);

        if (toAccount == null) {
            System.out.println("Recipient's account not found.");
            return;
        }

        System.out.print("Enter transfer amount: ");
        double amount = scanner.nextDouble();
        scanner.nextLine();  // consume newline

        fromAccount.transfer(toAccount, amount);
    }

    private static Account findAccount() {
        System.out.print("Enter your Account Number: ");
        String accountNumber = scanner.nextLine();
        Account account = accounts.get(accountNumber);

        if (account == null) {
            System.out.println("Account not found.");
        }

        return account;
    }
}
